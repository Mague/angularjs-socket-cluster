/**
 * AngularJS SocketCluster Interface
 * @author Ryan Page <ryanpager@gmail.com>
 * @version v1.3.0
 * @see https://github.com/ryanpager/angularjs-socket-cluster#readme
 * @license MIT
 */
!function(){"use strict";var n;n=function(){function n(){}var o,e,t,r,c;return n.prototype.$inject=[],e=!1,t=null,o={autoReconnect:!0,protocol:"http",hostname:"127.0.0.1",port:8e3},c=!1,r=!1,n.prototype.$get=["socketCluster","$q","$rootScope","$log","$timeout",function(n,i,u,s,l){var b;return b={connect:function(l){return null==l&&(l={}),i(function(i,b){return angular.merge(o,l),e&&s.info("Socket :: Attempting connection..."),t=n.connect(o),t.on("error",function(n){return"Action was silently blocked by publishIn middleware"!==n?s.error("Socket :: Error >> "+n):void 0}),t.on("subscribeFail",function(n){return s.error("Socket :: Channel subscription error >> "+n)}),t.on("disconnect",function(n){return r||(c=!0,u.$broadcast("socket:connection:dropped")),e&&(s.info("Socket :: Disconnection successful"),r||s.warn("Socket :: Connection dropped")),r=!1}),t.on("connectAbort",function(n){return n="Socket :: Connection aborted >> "+n,s.error(n),b(n)}),t.on("connect",function(){return c&&(c=!1,u.$broadcast("socket:connection:auto-reconnected"),e&&s.info("Socket :: Connection auto-reconnected")),e&&s.info("Socket :: Connection successful"),i(!0)})})},disconnect:function(){return i(function(n,o){var c;return e&&s.info("Socket :: Attempting disconnect..."),null==t?(c="Socket :: Error >> no socket connection established.",s.error(c),o(c)):(r=!0,t.disconnect(),n(!0))})},subscribe:function(n){return null==n&&(n=null),i(function(o,r){var c,i;return null==n?(c="Socket :: Error >> no socket channel specified.",s.error(c),r(c)):null==t?(c="Socket :: Error >> no socket connection established.",s.error(c),r(c)):(e&&s.info("Socket :: Subscribe to channel "+n),i=function(n){return null!=n.$error&&e&&s.error("Socket :: Event error >>",n),e&&s.info("Socket :: Event received >>",n),u.$apply(function(){return e&&s.info("Socket :: Rebroadcast event >> "+n.$event),u.$broadcast("socket:"+n.$event,n)})},t.watch(n,i),t.on("single.publish",i),t.subscribe(n),u.$broadcast("socket:channel:subscribed",n),o(!0))})},unsubscribe:function(n){return null==n&&(n=null),i(function(o,r){var c;return null==n?(c="Socket :: Error >> no socket channel specified.",s.error(c),r(c)):null==t?(c="Socket :: Error >> no socket connection established.",s.error(c),r(c)):(e&&s.info("Socket :: Unsubscribe to channel "+n),t.unsubscribe(n),t.unwatch(n),o(!0))})},publish:function(n,o){return null==n&&(n=null),null==o&&(o={}),i(function(r,c){var i;return null==n?(i="Socket :: Error >> no socket channel specified.",s.error(i),c(i)):null==t?(i="Socket :: Error >> no socket connection established.",s.error(i),c(i)):(e&&s.info("Socket :: Publish to channel "+n+" >>",o),t.publish(n,o,function(n){return null!=n&&"Action was silently blocked by publishIn middleware"!==n?c(n):r(!0)}))})},toggleDebugging:function(n){return null==n&&(n=!1),e=n},subscriptions:function(){return null==t?void s.error("Socket :: Error >> no socket connection established."):t.subscriptions()},isSubscribed:function(n){return null==t?void s.error("Socket :: Error >> no socket connection established."):t.isSubscribed(n)}}}],n}(),angular.module("sbb.components",[]).constant("socketCluster",socketCluster).provider("sbb.components.socket",n)}();