/**
 * AngularJS SocketCluster Interface
 * @author Ryan Page <ryanpager@gmail.com>
 * @version v1.1.5
 * @see https://github.com/ryanpager/angularjs-socket-cluster#readme
 * @license MIT
 */
!function(){"use strict";var n;n=function(){function n(){}var o,e,r;return n.prototype.$inject=[],e=!1,r=null,o={autoReconnect:!0,protocol:"http",hostname:"127.0.0.1",port:8e3},n.prototype.$get=["socketCluster","$q","$rootScope","$log","$timeout",function(n,t,c,u,i){var s;return s={connect:function(c){return null==c&&(c={}),t(function(t,i){return angular.merge(o,c),e&&u.info("Socket :: Attempting connection..."),r=n.connect(o),r.on("error",function(n){return"ignore"!==n?u.error("Socket :: Error >> "+n):void 0}),r.on("subscribeFail",function(n){return u.error("Socket :: Channel subscription error >> "+n)}),r.on("disconnect",function(n){return e?u.info("Socket :: Disconnection successful"):void 0}),r.on("connectAbort",function(n){return n="Socket :: Connection aborted >> "+n,u.error(n),i(n)}),r.on("connect",function(){return e&&u.info("Socket :: Connection successful"),t(!0)})})},disconnect:function(){return t(function(n,o){var t;return e&&u.info("Socket :: Attempting disconnect..."),null==r?(t="Socket :: Error >> no socket connection established.",u.error(t),o(t)):(r.disconnect(),n(!0))})},subscribe:function(n){return null==n&&(n=null),t(function(o,t){var i,s;return null==n?(i="Socket :: Error >> no socket channel specified.",u.error(i),t(i)):null==r?(i="Socket :: Error >> no socket connection established.",u.error(i),t(i)):(e&&u.info("Socket :: Subscribe to channel "+n),s=function(n){return null!=n.$error?void(e&&u.error("Socket :: Event error >>",n)):(e&&u.info("Socket :: Event received >>",n),c.$apply(function(){return e&&u.info("Socket :: Rebroadcast event >> "+n.$event),c.$broadcast("socket:"+n.$event,n)}))},r.watch(n,s),r.on("single.publish",s),r.subscribe(n),o(!0))})},unsubscribe:function(n){return null==n&&(n=null),t(function(o,t){var c;return null==n?(c="Socket :: Error >> no socket channel specified.",u.error(c),t(c)):null==r?(c="Socket :: Error >> no socket connection established.",u.error(c),t(c)):(e&&u.info("Socket :: Unsubscribe to channel "+n),r.unsubscribe(n),r.unwatch(n),o(!0))})},publish:function(n,o){return null==n&&(n=null),null==o&&(o={}),t(function(t,c){var i;return null==n?(i="Socket :: Error >> no socket channel specified.",u.error(i),c(i)):null==r?(i="Socket :: Error >> no socket connection established.",u.error(i),c(i)):(e&&u.info("Socket :: Publish to channel "+n+" >>",o),r.publish(n,o,function(n){return null!=n?c(n):t(!0)}))})},toggleDebugging:function(n){return null==n&&(n=!1),e=n},subscriptions:function(){return null==r?void u.error("Socket :: Error >> no socket connection established."):r.subscriptions()},isSubscribed:function(n){return null==r?void u.error("Socket :: Error >> no socket connection established."):r.isSubscribed(n)}}}],n}(),angular.module("sbb.components",[]).constant("socketCluster",socketCluster).provider("sbb.components.socket",n)}();