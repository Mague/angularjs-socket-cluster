/**
 * AngularJS SocketCluster Interface
 * @author Ryan Page <ryanpager@gmail.com>
 * @version v1.0.0
 * @see https://github.com/ryanpager/angularjs-socket-cluster#readme
 * @license MIT
 */
!function(){"use strict";var n;n=function(){function n(){}var o,e,r;return n.prototype.$inject=[],e=!1,r=null,o={autoReconnect:!0,protocol:"http",hostname:"127.0.0.1",port:8e3},n.prototype.$get=["socketCluster","$rootScope","$log","$timeout",function(n,t,c,i){var u;return u={toggleDebugging:function(n){return null==n&&(n=!1),e=n},connect:function(t){return null==t&&(t={}),angular.merge(o,t),e&&c.info("Socket :: Attempting connection..."),r=n.connect(o),r.on("error",function(n){return c.error("Socket :: Error >> "+n)}),r.on("connectAbort",function(n){return c.error("Socket :: Connection aborted >> "+n)}),r.on("connect",function(){return e?c.info("Socket :: Connection successful!"):void 0}),r.on("subscribeFail",function(n){return c.error("Socket :: Failed channel subscription >> "+n)})},subscribe:function(n){return null==n&&(n=null),null==n?void c.error("Socket :: Error >> no socket channel specified."):null==r?void c.error("Socket :: Error >> no socket connection established."):(e&&c.info("Socket :: Subscribe to channel "+n),r.subscribe(n),r.watch(n,function(n){return null!=n.$error?void(e&&c.error("Socket :: Event error >> "+JSON.stringify(n))):(e&&c.info("Socket :: Event received >> "+JSON.stringify(n)),i(function(){return t.$apply(function(){return e&&c.info("Socket :: Rebroadcast event >> "+n.$event),t.$broadcast("socket:"+n.$event,n)})}))}))},unsubscribe:function(n){return null==n&&(n=null),null==n?void c.error("Socket :: Error >> no socket channel specified."):null==r?void c.error("Socket :: Error >> no socket connection established."):(e&&c.info("Socket :: Unsubscribe to channel "+n),r.unsubscribe(n),r.unwatch(n))},subscriptions:function(){return null==r?void c.error("Socket :: Error >> no socket connection established."):r.subscriptions()},isSubscribed:function(n){return null==r?void c.error("Socket :: Error >> no socket connection established."):r.isSubscribed(n)},publish:function(n,o){return null==n&&(n=null),null==o&&(o={}),null==n?void c.error("Socket :: Error >> no socket channel specified."):r?(e&&c.info("Socket :: Event published to "+n+" >> "+JSON.stringify(o)),r.publish(n,o)):void c.error("Socket :: Error >> no socket connection established.")}}}],n}(),angular.module("sbb.components",[]).constant("socketCluster",socketCluster).provider("sbb.components.socket",n)}();